@page "/log"

<PageTitle>Debug Log</PageTitle>

@using S5CommunicationLibrary.Web.Data

@inject TrantecReceiverService ReceiverService

<div class="row">
    @foreach(S5.Receiver rx in ReceiverService.GetReceivers())
    {
        <div class="col-12 mb-3">
            <div class="card">
                <div class="card-header">
                    @rx.Name - @rx.PortName
                </div>
                <div class="card-body">
                    <table class="table table-bordered">
                        <tr>
                            <th>Key</th>
                            <th>Value</th>
                        </tr>
                        @foreach(KeyValuePair<string, string> data in rx.DebugData)
                        {
                            <tr>
                                <td><pre class="kv-data">@data.Key</pre></td>
                                <td><pre class="kv-data">@data.Value</pre></td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    } 
</div>

<div class="row">

    <div class="col-12 mb-3">
        <div class="card">
            <div class="card-header">
                Info Log
            </div>
            <div class="card-body">
                @if (ReceiverService.InfoLog != null)
                {
                    <pre>
                    @foreach (var line in ReceiverService.InfoLog)
                    {
                        @line @Environment.NewLine

                    }
                    </pre>
                }
            </div>
        </div>
    </div>

    <div class="col-12 mb-3">
        <div class="card">
            <div class="card-header">
                Debug Log
            </div>
            <div class="card-body">
                @if (ReceiverService.DebugLog != null)
                {
                    <pre>
                    @foreach (var line in ReceiverService.DebugLog)
                    {
                        @line @Environment.NewLine

                    }
                    </pre>
                }
            </div>
        </div>
    </div>

</div>




@code {

    protected override async Task OnInitializedAsync()
    {

    }



    // Timer to refresh data on this page every second
    System.Threading.Timer? timer;
    protected override void OnInitialized()
    {
        timer = new System.Threading.Timer(async _ =>  // async void
        {

            InvokeAsync(() => StateHasChanged());

        }, null, 0, 1000);
    }



}
